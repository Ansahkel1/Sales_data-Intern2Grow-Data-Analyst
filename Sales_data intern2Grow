import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
%matplotlib inline

in_file='sales_data.csv'
df=pd.read_csv(in_file)
df

# Display the first few rows of the dataset to understand its structure
print(df.head())

# Check for missing values and handle them if necessary
print(df.isnull().sum())

# Handle missing values in 'price', 'quantity', 'revenue'
mean_price = df['price'].mean()
mean_quantity = df['quantity'].mean()
mean_revenue = df['revenue'].mean()

df['price'].fillna(mean_price, inplace=True)
df['quantity'].fillna(mean_quantity, inplace=True)
df['revenue'].fillna(mean_revenue, inplace=True)

# Verify that there are no more missing values
print(df.isnull().sum())

# Convert the 'date' column to datetime type
df['date'] = pd.to_datetime(df['date'])

# Calculate total revenue generated by the company over the course of the year
total_revenue = df['revenue'].sum()
print(f'Total Revenue: ${total_revenue:.2f}')

# Identify the product with the highest revenue and the corresponding revenue
highest_revenue_product = df.loc[df['revenue'].idxmax()]
print(f'Highest Revenue Product: {highest_revenue_product["product"]}, Revenue: ${highest_revenue_product["revenue"]:.2f}')

# Calculate the average price of a product sold by the company
average_price = df['price'].mean()
print(f'Average Price: ${average_price:.2f}')

# Calculate the total quantity of products sold by the company
total_quantity = df['quantity'].sum()
print(f'Total Quantity Sold: {total_quantity:.2f}')

# Identify the category with the highest revenue and the corresponding revenue
highest_revenue_category = df.groupby('category')['revenue'].sum().idxmax()
category_revenue = df.groupby('category')['revenue'].sum().max()
print(f'Highest Revenue Category: {highest_revenue_category}, Revenue: ${category_revenue:.2f}')

# Calculate the average revenue per sale

average_revenue_per_sale = df['revenue'].mean()
print(f'Average Revenue per Sale: ${average_revenue_per_sale:.2f}')

# Calculate the total revenue generated in each quarter of the year
df['quarter'] = df['date'].dt.quarter
quarterly_revenue = df.groupby('quarter')['revenue'].sum()
print('Total Revenue in Each Quarter:')
print(quarterly_revenue.round(2))  # round to 2 decimal places

# Plot total revenue in each quarter using seaborn
plt.figure(figsize=(10, 6))
sns.barplot(x=quarterly_revenue.index, y=quarterly_revenue.values, color='g')
plt.xlabel('Quarter',fontsize = '15')
plt.ylabel('Total Revenue', fontsize = '15')
plt.title('Total Revenue in Each Quarter', fontweight='bold',fontsize = '15')
plt.show()
